$hash_file = "<%= hash_file %>"

Function Decode-Base64File($src, $dst) {
  Try {
    $in = (Get-Item $src).OpenRead()
    $b64 = New-Object -TypeName System.Security.Cryptography.FromBase64Transform
    $mode = [System.Security.Cryptography.CryptoStreamMode]::Read
    $d = New-Object -TypeName System.Security.Cryptography.CryptoStream $in,$b64,$mode
    $d.CopyTo(($out = [System.IO.File]::OpenWrite($dst)))
  } Finally { if ($in -ne $null) { $in.Dispose() }; if ($out -ne $null) { $out.Dispose() }; if ($d -ne $null) { $d.Dispose() } }
}

Function Check-Files($hash) {
  return $hash.GetEnumerator() | ForEach-Object {
    $dst = $ExecutionContext.SessionState.Path.GetUnresolvedProviderPathFromPSPath($_.Key)
    New-Object psobject -Property @{
      chk_exists = ($exists = Test-Path $dst -PathType Leaf)
      src_md5 = ($srcMd5 = $_.Value)
      dst_md5 = ($dstMd5 = if ($exists) { Get-MD5Sum $dst } else { $null })
      chk_dirty = ($dirty = if ($srcMd5 -ne $dstMd5) { $true } else { $false })
      verifies = if ($dirty -eq $false) { $true } else { $false }
    }
  } | Select-Object -Property chk_exists,src_md5,dst_md5,chk_dirty,verifies
}

Function Get-MD5Sum($src) {
  Try {
    $c = New-Object -TypeName System.Security.Cryptography.MD5CryptoServiceProvider
    $bytes = $c.ComputeHash(($in = (Get-Item $src).OpenRead()))
    return ([System.BitConverter]::ToString($bytes)).Replace("-", "").ToLower()
  } Finally { if ($c -ne $null) { $c.Dispose() }; if ($in -ne $null) { $in.Dispose() } }
}

Function Invoke-Input($infile) {
  $infile = Unresolve-Path $infile
  Decode-Base64File $infile ($decoded = "$($infile).ps1")
  $expr = Get-Content $decoded | Out-String
  Remove-Item $infile,$decoded -Force
  return Invoke-Expression "$expr"
}

Function Unresolve-Path($p) {
  if ($p -eq $null) { return $null }
  else { return $ExecutionContext.SessionState.Path.GetUnresolvedProviderPathFromPSPath($p) }
}

Check-Files (Invoke-Input $hash_file) | ConvertTo-Csv -NoTypeInformation
